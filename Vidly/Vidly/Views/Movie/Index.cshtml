@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<Vidly.Models.Movie>
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@
@{
    ViewData["Title"] = "Movies";
}


<h1>Movies</h1>
<hr />
<a class="btn btn-primary" asp-action="New">Create new</a>
@if (!Model.Any())
{
    <hr />
    <br />
    <p>We don't have any movies yet.</p>
}
else
{
<div class="table__container">
    <table class="table" id="Movie">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Genre
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in Model)
            {
                <tr>
                    <td>
                        @movie.Name
                    </td>
                    <td>
                        @movie.Genre.Name
                    </td>
                    <td>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@movie.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
}

@section Scripts
{
    <script>
        $(document).ready( function () {
            $('#Movie').DataTable();
        } );
    </script>
}